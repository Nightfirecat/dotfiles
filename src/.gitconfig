[alias]
	# TODO: fix columnizing (-l arg with v2.37+, or some other workaround?)
	# TODO: wrap command column for long commands
	alias = !git config --get-regexp '^alias\\.' | cut -d '.' -f '2-' | sed -re 's/^([^ ]+) /\\1*/g' | column -s '*' -t | sort
	amend = commit --amend
	amend-a = commit -a --amend
	# TODO: fix below; that method is not accurate
#	check-merge = "!f() { output=$(git format-patch ${1:-master} --stdout | git apply --3way --check - 2>/dev/null); exit_code=$?; if [ $exit_code != '0' ] && [ $exit_code != '128' ]; then echo 'Merge conflicts exist! See `git apply` output below:'; echo; echo $output; fi; }; f"
	co-pr = "!f() { \
	           [ $# -ne 2 ] && echo 'Two arguments required, PR # and branch name' && exit 1; \
	           git fetch upstream pull/$1/head:$2-$1 && git checkout $2-$1 && git merge master --no-gpg-sign --no-edit; \
	         }; f"
	fixup = commit --amend --no-edit
	fixup-a = commit -a --amend --no-edit
	ll = log --pretty=format:"%C(yellow)%h%C(red)%d%C(reset)\\ %s\\ %C(blue)%C(bold)[%aN]%C(reset)" --decorate --numstat
	lo = log --oneline --decorate
	ls = log --pretty=format:"%C(yellow)%h%C(red)%d%C(reset)\\ %s\\ %C(blue)%C(bold)[%aN]%C(reset)" --decorate
	lsd = log --pretty=format:"%C(yellow)%h\\ %ad%C(red)%d%C(reset)\\ %s\\ %C(blue)%C(bold)[%aN]%C(reset)" --decorate --date=short
	lsdr = log --pretty=format:"%C(yellow)%h\\ %ad%C(red)%d%C(reset)\\ %s\\ %C(blue)%C(bold)[%aN]%C(reset)" --decorate --date=relative
	pullf = pull --ff-only
	pullfsur = !git pull --ff-only && git submodule update --recursive
	pullr = pull --rebase
	pullrp = !git pull --rebase && git push
	pullrsur = !git pull --rebase && git submodule update --recursive
	pullrsurp = !git pull --rebase && git submodule update --recursive && git push
	reword = commit --amend
	sur = submodule update --recursive
[apply]
	whitespace = fix
[branch]
	autosetupmerge = always
	autosetuprebase = always
[color]
	branch = auto
	diff = auto
	interactive = true
	status = auto
[core]
	autocrlf = false
	fscache = true
	longpaths = true
	pager = less -FX -x1,5
	whitespace = cr-at-eol,tabwidth=4,trailing-space
[diff]
	colormoved = default
	renames = copies
	submodule = log
	wsErrorHighlight = old,new
[diff "astextplain"]
	# diff document files based on their text contents rather than binaries
	textconv = astextplain
[fetch]
	prune = true
[help]
	autocorrect = 20
[include]
	# Define system-specific user configs such as GPG signing key
	path = ~/.user.gitconfig
[pager]
	# Build or install `diff-highlight` to some $PATH present location for
	# improved diff highlights. Falls back on plain `core.pager` if not present.
	# See: https://git.kernel.org/pub/scm/git/git.git/tree/contrib/diff-highlight/README
	diff = (type diff-highlight >/dev/null 2>&1 && diff-highlight | $(git config core.pager)) || $(git config core.pager)
	log = (type diff-highlight >/dev/null 2>&1 && diff-highlight | $(git config core.pager)) || $(git config core.pager)
	show = (type diff-highlight >/dev/null 2>&1 && diff-highlight | $(git config core.pager)) || $(git config core.pager)
[push]
	default = current
[rebase]
	autosquash = true
[status]
	submodulesummary = true
[submodule]
	fetchjobs = 0
[user]
	name = Jordan Atwood
	email = nightfirecat@nightfirec.at
